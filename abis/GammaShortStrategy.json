[
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousImplementation",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newImplementation",
        "type": "address"
      }
    ],
    "name": "ProxyImplementationUpdated",
    "type": "event"
  },
  {
    "stateMutability": "payable",
    "type": "fallback"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes4",
        "name": "id",
        "type": "bytes4"
      }
    ],
    "name": "supportsInterface",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newImplementation",
        "type": "address"
      }
    ],
    "name": "upgradeTo",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newImplementation",
        "type": "address"
      },
      {
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      }
    ],
    "name": "upgradeToAndCall",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "stateMutability": "payable",
    "type": "receive"
  },
  {
    "inputs": [],
    "name": "T",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "strategyId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "int256",
        "name": "delta",
        "type": "int256"
      }
    ],
    "name": "DeltaHedged",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "strategyId",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "strategyTokenAmount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "depositedAmount",
        "type": "uint256"
      }
    ],
    "name": "DepositedToStrategy",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "strategyId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "hedgeInterval",
        "type": "uint256"
      }
    ],
    "name": "HedgeIntervalUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "strategyId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "hedgeSqrtPriceThreshold",
        "type": "uint256"
      }
    ],
    "name": "HedgePriceThresholdUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "newHedgerAddress",
        "type": "address"
      }
    ],
    "name": "HedgerUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint8",
        "name": "version",
        "type": "uint8"
      }
    ],
    "name": "Initialized",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "operator",
        "type": "address"
      }
    ],
    "name": "OperatorUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "newReaderAddress",
        "type": "address"
      }
    ],
    "name": "ReaderUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "strategyId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "pairId",
        "type": "uint256"
      }
    ],
    "name": "StrategyAdded",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "strategyId",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "strategyTokenAmount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "withdrawnAmount",
        "type": "uint256"
      }
    ],
    "name": "WithdrawnFromStrategy",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_strategyId",
        "type": "uint256"
      }
    ],
    "name": "checkPriceHedge",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_strategyId",
        "type": "uint256"
      }
    ],
    "name": "checkTimeHedge",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_strategyId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_strategyTokenAmount",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "_recepient",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "_maxDepositAmount",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "isQuoteMode",
        "type": "bool"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "lowerSqrtPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "upperSqrtPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "deadline",
            "type": "uint256"
          }
        ],
        "internalType": "struct IStrategyVault.StrategyTradeParams",
        "name": "_tradeParams",
        "type": "tuple"
      }
    ],
    "name": "deposit",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "finalDepositMargin",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_strategyId",
        "type": "uint256"
      },
      {
        "internalType": "uint64",
        "name": "_pairId",
        "type": "uint64"
      },
      {
        "internalType": "uint256",
        "name": "_initialMarginAmount",
        "type": "uint256"
      },
      {
        "internalType": "int256",
        "name": "_initialPerpAmount",
        "type": "int256"
      },
      {
        "internalType": "int256",
        "name": "_initialSquartAmount",
        "type": "int256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "lowerSqrtPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "upperSqrtPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "deadline",
            "type": "uint256"
          }
        ],
        "internalType": "struct IStrategyVault.StrategyTradeParams",
        "name": "_tradeParams",
        "type": "tuple"
      }
    ],
    "name": "depositForPositionInitialization",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_strategyId",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "lowerSqrtPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "upperSqrtPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "deadline",
            "type": "uint256"
          }
        ],
        "internalType": "struct IStrategyVault.StrategyTradeParams",
        "name": "_tradeParams",
        "type": "tuple"
      },
      {
        "internalType": "uint256",
        "name": "_deltaRatio",
        "type": "uint256"
      }
    ],
    "name": "execDeltaHedge",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_strategyId",
        "type": "uint256"
      }
    ],
    "name": "getDelta",
    "outputs": [
      {
        "internalType": "int256",
        "name": "",
        "type": "int256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_strategyId",
        "type": "uint256"
      }
    ],
    "name": "getPrice",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "hedger",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_controller",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_reader",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "lower",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "upper",
            "type": "uint256"
          }
        ],
        "internalType": "struct BaseStrategy.MinPerValueLimit",
        "name": "_minPerValueLimit",
        "type": "tuple"
      }
    ],
    "name": "initialize",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "operator",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "components": [
              {
                "internalType": "int256",
                "name": "perpEntryUpdate",
                "type": "int256"
              },
              {
                "internalType": "int256",
                "name": "sqrtEntryUpdate",
                "type": "int256"
              },
              {
                "internalType": "int256",
                "name": "sqrtRebalanceEntryUpdateUnderlying",
                "type": "int256"
              },
              {
                "internalType": "int256",
                "name": "sqrtRebalanceEntryUpdateStable",
                "type": "int256"
              },
              {
                "internalType": "int256",
                "name": "perpPayoff",
                "type": "int256"
              },
              {
                "internalType": "int256",
                "name": "sqrtPayoff",
                "type": "int256"
              }
            ],
            "internalType": "struct Perp.Payoff",
            "name": "payoff",
            "type": "tuple"
          },
          {
            "internalType": "int256",
            "name": "fee",
            "type": "int256"
          },
          {
            "internalType": "int256",
            "name": "minDeposit",
            "type": "int256"
          }
        ],
        "internalType": "struct DataType.TradeResult",
        "name": "_tradeResult",
        "type": "tuple"
      },
      {
        "internalType": "bytes",
        "name": "_data",
        "type": "bytes"
      }
    ],
    "name": "predyTradeCallback",
    "outputs": [
      {
        "internalType": "int256",
        "name": "",
        "type": "int256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "reader",
    "outputs": [
      {
        "internalType": "contract Reader",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_newHedger",
        "type": "address"
      }
    ],
    "name": "setHedger",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_newOperator",
        "type": "address"
      }
    ],
    "name": "setOperator",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_reader",
        "type": "address"
      }
    ],
    "name": "setReader",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "strategies",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "id",
        "type": "uint256"
      },
      {
        "internalType": "uint64",
        "name": "pairGroupId",
        "type": "uint64"
      },
      {
        "internalType": "uint64",
        "name": "pairId",
        "type": "uint64"
      },
      {
        "internalType": "uint256",
        "name": "vaultId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "marginToken",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "marginRoundedScaler",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "strategyToken",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "lastHedgeTimestamp",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastHedgePrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "hedgeInterval",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "hedgeSqrtPriceThreshold",
            "type": "uint256"
          }
        ],
        "internalType": "struct BaseStrategy.HedgeStatus",
        "name": "hedgeStatus",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "strategyCount",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_strategyId",
        "type": "uint256"
      },
      {
        "internalType": "int256",
        "name": "_squartAmount",
        "type": "int256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "lowerSqrtPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "upperSqrtPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "deadline",
            "type": "uint256"
          }
        ],
        "internalType": "struct IStrategyVault.StrategyTradeParams",
        "name": "_tradeParams",
        "type": "tuple"
      }
    ],
    "name": "updateGamma",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_strategyId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_hedgeInterval",
        "type": "uint256"
      }
    ],
    "name": "updateHedgeInterval",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_strategyId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_newSqrtPriceThreshold",
        "type": "uint256"
      }
    ],
    "name": "updateHedgePriceThreshold",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_strategyId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_withdrawStrategyAmount",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "_recepient",
        "type": "address"
      },
      {
        "internalType": "int256",
        "name": "_minWithdrawAmount",
        "type": "int256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "lowerSqrtPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "upperSqrtPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "deadline",
            "type": "uint256"
          }
        ],
        "internalType": "struct IStrategyVault.StrategyTradeParams",
        "name": "_tradeParams",
        "type": "tuple"
      }
    ],
    "name": "withdraw",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "finalWithdrawAmount",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "implementationAddress",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "ownerAddress",
        "type": "address"
      },
      {
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      }
    ],
    "stateMutability": "payable",
    "type": "constructor"
  }
]